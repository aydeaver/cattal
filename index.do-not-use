import {Command, Flags} from '@oclif/core'
const path = require('path')
import Parser from './Parser'
// const parser = require('./Parser');
const task_directory = path.resolve() + '/tasks'
export default class Cattal extends Command {
  static description = 'describe the command here'

  static examples = ['<%= config.bin %> <%= command.id %>']

  static flags = {
    // flag with a value (-n, --name=VALUE)
    name: Flags.string({char: 'n', description: 'name to print'}),
    // flag with no value (-f, --force)
    force: Flags.boolean({char: 'f'}),
    dir: Flags.string({char: 'd', description: 'Where to load tasks from'}),
  }

  // static args = {
  //   file: Args.string({description: 'file to read'}),
  // }

  async run() {
    const {args, flags} = await this.parse(Cattal)

    const name = flags.name ?? 'world'
    this.log(`loading from  ${task_directory}: cattal`)
    const parser = new Parser('jjj')
    console.log(parser.working())
    if (args.file && flags.force) {
      this.log(`you input --force and --file: ${args.file}`)
    }
  }
}
